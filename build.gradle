plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0-M2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'org.owasp.dependencycheck' version '8.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.flywaydb:flyway-core'
	implementation 'javax.persistence:javax.persistence-api:2.2'
	implementation 'me.paulschwarz:spring-dotenv:4.0.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'com.microsoft.playwright:playwright:1.42.0'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

// JaCoCo configuration
jacoco {
	toolVersion = "0.8.9"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
	}
}

// OWASP Dependency Check configuration
dependencyCheck {
	failBuildOnCVSS = 7
	formats = ['HTML', 'JSON']
	suppressionFile = 'dependency-check-suppressions.xml'
}

// Playwright browser installation
task installPlaywright(type: JavaExec) {
	classpath = sourceSets.test.runtimeClasspath
	mainClass = 'com.microsoft.playwright.CLI'
	args = ['install']
	dependsOn testClasses
}
