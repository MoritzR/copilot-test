version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: customer-api
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/customerdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_FLYWAY_ENABLED=true
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    depends_on:
      - db
    networks:
      - customer-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    container_name: customer-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=customerdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - customer-network
    restart: unless-stopped

networks:
  customer-network:
    driver: bridge

volumes:
  postgres-data: