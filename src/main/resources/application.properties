spring.application.name=demo

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration

# H2 configuration
spring.datasource.url=jdbc:h2:file:./data/customerdb;DB_CLOSE_DELAY=-1
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password

# H2 console enabled for easier database inspection
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA settings
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=validate

# OpenTelemetry Configuration
otel.sdk.disabled=false
otel.service.name=customer-api
otel.traces.exporter=otlp
otel.metrics.exporter=none
otel.logs.exporter=none
otel.exporter.otlp.endpoint=http://jaeger:4317
otel.exporter.otlp.protocol=grpc
otel.traces.sampler=parentbased_always_on

# Connection pool configuration
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.pool-name=HikariPool-1

# Spring Actuator and Tracing Configuration
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.endpoints.web.exposure.include=health,metrics,prometheus,loggers

# Logging Configuration
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.root=INFO
logging.level.com.example.demo=DEBUG

# Additional OpenTelemetry Debug Properties
otel.javaagent.debug=true
